<App Theme="Basic">
    <iOS.StatusBarConfig ux:Name="iosStatusBar" Style="Light" />

    <ux:Include File="Resources.ux" />
    <!--     <ClientPanel Color="#d4fcaf"> -->

    <ClientPanel Color="Black">
        <HidingPanel ux:Name="topPanel">
            <GridLayout Rows="60,1*"/>
            <WhileEnabled>
                <Change navBarTrans.Y="0" Duration="0.4"/>
            </WhileEnabled>
            <Grid Columns="70,1*,70">
                <Translation ux:Name="navBarTrans" RelativeTo="Size" Y="-0.2" />
                <Panel HitTestMode="LocalBoundsAndChildren">
                    <Image File="Icons/menu.png" Width="30" Height="30"/>
                    <Clicked>
                        <Scale Factor="0.8" Duration=".15" Easing="CubicInOut" />
                        <Set state.Active="loginButtonState" />
                    </Clicked>
                </Panel>
                <Text Value="Home" TextColor="White" FontSize="20" Alignment="VerticalCenter"/>
                <Image File="Icons/search.png" Width="30" Height="30"/>
            </Grid>
            <HidingPanel ux:Name="mainPanel">
                <DockPanel>
                    <PageControl ux:Name="pageControl">
                        <Page>
                            <StackPanel>
                                <Text TextColor="TopGray" TextAlignment="Center" Margin="0,20,0,0" FontSize="32">These people...</Text>
                                <Grid Columns="1*,1*">
                                    <Card CardName="Ted Mosby" CardFill="#68C4DB" Location="Blom" TimeRange="09:00AM - 10:30AM" TypeString="Running, Chest/Triceps" ux:Name="mainCard1" ButtonOpac="0.0" HitTestMode="LocalBoundsAndChildren">
                                        <ImageFill ux:Binding="UserImage" File="Assets/profile_1.png" />
                                        <WhilePressed>
                                            <Scale Delay="0.2" Factor="1.2" Duration="0.2" Easing="CubicInOut"/>
                                        </WhilePressed>
                                    </Card>
                                    <Card CardName="Barney Stinson" CardFill="#E9BD70" Location="SPAC" TimeRange="08:00AM - 09:00AM" TypeString="Cycling, Legs/Shoulders" ux:Name="mainCard2" ButtonOpac="0.0" HitTestMode="LocalBoundsAndChildren">
                                        <ImageFill ux:Binding="UserImage" File="Assets/profile_2.png" />
                                        <WhilePressed>
                                            <Scale Delay="0.2" Factor="1.2" Duration="0.2" Easing="CubicInOut"/>
                                        </WhilePressed>
                                    </Card>
                                </Grid>
                                <Text TextColor="BottomGray" TextAlignment="Center" FontSize="32">already worked out today!</Text>
                            </StackPanel>
                        </Page>
                        <Page>
                            <StackPanel>
                                <Text TextColor="TopGray" Margin="0,20" TextAlignment="Center" FontSize="28" TextWrapping="Wrap">What have YOU done today?</Text>
                                <Text TextColor="TopGray" TextAlignment="Center" FontSize="40">WHAT? NOTHING?</Text>
                                <Image File="Assets/laugh.jpg" Height="240"/>
                                <Text TextColor="BottomGray" Margin="0,20,0,0" TextAlignment="Center" FontSize="20" TextWrapping="Wrap">Find a workout buddy and work out</Text>
                                <Text TextColor="BottomGray" Margin="0,25,0,0" TextAlignment="Center" FontSize="40">RIGHT NOW</Text>
                                <Image File="Icons/DownRight-50.png" Alignment="BottomRight" Margin="0,0,80,100" Height="50">
                                    <DropShadow/>
                                </Image>
                            </StackPanel>
                        </Page>
                    </PageControl>
                    <PageIndicator Navigation="pageControl" Dock="Bottom" Alignment="BottomCenter">
                        <Circle ux:Generate="Factory" ux:Binding="DotFactory" Fill="Teal" Margin="5" Width="6" Height="6">
                            <ActivatingAnimation>
                                <Scale Factor="1.5"/>
                            </ActivatingAnimation>
                        </Circle>
                    </PageIndicator>
                </DockPanel>
            </HidingPanel>
        </HidingPanel>

        <HidingPanel ux:Name="createWorkoutDateTimeForm" Width="90%" Height="80%">
            <Grid RowCount="4" Rows="50,50,50,50" Margin="20,50">
                <Text TextAlignment="Center" TextWrapping="Wrap">When are you planning on working out?</Text>
                <Grid Columns="2*,3*">
                    <Text Alignment="Right" Margin="0,7,0,0">Date:</Text>
                    <TextInput Value="5/2/2016" />
                </Grid>
                <Grid Columns="2*,3*">
                    <Text Alignment="Right"  Margin="0,7,0,0">Starting at: </Text>
                    <TextInput Value="01:00 PM" />
                </Grid>
                <Grid Columns="2*,3*">
                    <Text Alignment="Right"  Margin="0,7,0,0">Ending at: </Text>
                    <TextInput Value="02:00 PM" />
                </Grid>
            </Grid>
            <StackPanel Alignment="Bottom" Margin="0,0,0,40">
                <Panel Width="100" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text TextColor="White" Value="NEXT" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Green" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutLocationState"/>
                    </Clicked>
                </Panel>
            </StackPanel>
        </HidingPanel>

        <HidingPanel ux:Name="createWorkoutLocationForm" Width="90%" Height="80%">
            <Grid RowCount="4" Rows="50,65,65,65" Margin="20,50">
                <Text TextAlignment="Center" TextWrapping="Wrap">Where are you working out?</Text>
                <Grid Columns="1*, 1*" Margin="20,0,20,0">
                    <Text Alignment="Center">SPAC</Text>
                    <Switch ux:Name="switchSPAC">
                        <WhileTrue>
                            <Set switchBlom.Value="False" />
                            <Set switchPatten.Value="False" />
                        </WhileTrue>
                    </Switch>
                </Grid>
                <Grid Columns="1*, 1*" Margin="20,0,20,0">
                    <Text Alignment="Center">Blom</Text>
                    <Switch ux:Name="switchBlom">
                        <WhileTrue>
                            <Set switchSPAC.Value="False" />
                            <Set switchPatten.Value="False" />
                        </WhileTrue>
                    </Switch>
                </Grid>
                <Grid Columns="1*, 1*" Margin="20,0,20,0">
                    <Text Alignment="Center">Patten</Text>
                    <Switch ux:Name="switchPatten">
                        <WhileTrue>
                            <Set switchBlom.Value="False" />
                            <Set switchSPAC.Value="False" />
                        </WhileTrue>
                    </Switch>
                </Grid>
            </Grid>
            <StackPanel Alignment="Bottom" Margin="0,0,0,40">
                <Panel Width="100" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text TextColor="White" Value="NEXT" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Green" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutTypeState"/>
                    </Clicked>
                </Panel>
                <Panel Width="100" Height="50" Margin="0,10,0,10">
                    <Text TextColor="White" Value="BACK" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Gray" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutDateTimeState"/>
                    </Clicked>
                </Panel>
            </StackPanel>
        </HidingPanel>

        <HidingPanel ux:Name="createWorkoutTypeForm" Width="90%" Height="80%">
            <StackPanel Alignment="TopCenter" Margin="0,50,0,0">
                <Text TextAlignment="Center" TextWrapping="Wrap">What type of workout?</Text>
                <Text TextAlignment="Center" TextWrapping="Wrap">(Choose all that you'll be doing)</Text>
                <Text TextAlignment="Left" Margin="0,15,0,0">Cardio</Text>
                <Grid Columns="1*,1*" Margin="5,0,5,0">
                    <Text Alignment="CenterLeft">Running</Text>
                    <Switch />
                </Grid>
                <Grid Columns="1*,1*" Margin="5,0,5,0">
                    <Text Alignment="CenterLeft">Cycling</Text>
                    <Switch />
                </Grid>
                <Grid Columns="1*,1*" Margin="5,0,5,0">
                    <Text Alignment="CenterLeft">Swimming</Text>
                    <Switch />
                </Grid>
                <Text TextAlignment="Left" Margin="0,15,0,0">Weight</Text>
                <Grid Columns="1*,1*" Margin="5,0,5,0">
                    <Text Alignment="CenterLeft">Chest/Triceps</Text>
                    <Switch />
                </Grid>
                <Grid Columns="1*,1*" Margin="5,0,5,0">
                    <Text Alignment="CenterLeft">Back/Biceps</Text>
                    <Switch />
                </Grid>
                <Grid Columns="1*,1*" Margin="5,0,5,0">
                    <Text Alignment="CenterLeft">Legs/Shoulders</Text>
                    <Switch />
                </Grid>
            </StackPanel>
            <Grid Columns="1*,1*" Alignment="Bottom" Margin="0,0,0,40">
                <Panel Width="100" Height="50" Margin="0,10,0,10">
                    <Text TextColor="White" Value="BACK" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Gray" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutLocationState"/>
                    </Clicked>
                </Panel>
                <Panel Width="100" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text TextColor="White" Value="NEXT" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Green" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutNumberState"/>
                    </Clicked>
                </Panel>
            </Grid>
        </HidingPanel>

        <HidingPanel ux:Name="createWorkoutNumberForm" Width="90%" Height="80%">
            <StackPanel Alignment="TopCenter" Margin="50,50,50,0">
                <Text TextAlignment="Center" TextWrapping="Wrap">How many people do you want to work out with?</Text>
                <Grid Columns="1*,1*" Margin="40,20,5,0">
                    <Text Alignment="CenterLeft">1</Text>
                    <Switch ux:Name="switchNumber1">
                        <WhileTrue>
                            <Set switchNumber2.Value="false"/>
                            <Set switchNumber3.Value="false"/>
                            <Set switchNumberMore3.Value="false"/>
                        </WhileTrue>
                    </Switch>
                </Grid>
                <Grid Columns="1*,1*" Margin="40,5,5,0">
                    <Text Alignment="CenterLeft">2</Text>
                    <Switch ux:Name="switchNumber2">
                        <WhileTrue>
                            <Set switchNumber1.Value="false"/>
                            <Set switchNumber3.Value="false"/>
                            <Set switchNumberMore3.Value="false"/>
                        </WhileTrue>
                    </Switch>
                </Grid>
                <Grid Columns="1*,1*" Margin="40,5,5,0">
                    <Text Alignment="CenterLeft">3</Text>
                    <Switch ux:Name="switchNumber3">
                        <WhileTrue>
                            <Set switchNumber1.Value="false"/>
                            <Set switchNumber2.Value="false"/>
                            <Set switchNumberMore3.Value="false"/>
                        </WhileTrue>
                    </Switch>
                </Grid>
                <Grid Columns="1*,1*" Margin="40,5,5,0">
                    <Text Alignment="CenterLeft">More than 3</Text>
                    <Switch ux:Name="switchNumberMore3">
                        <WhileTrue>
                            <Set switchNumber1.Value="false"/>
                            <Set switchNumber2.Value="false"/>
                            <Set switchNumber3.Value="false"/>
                        </WhileTrue>
                    </Switch>
                </Grid>
            </StackPanel>
            <StackPanel Alignment="Bottom" Margin="0,0,0,40">
                <Panel Width="100" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text TextColor="White" Value="NEXT" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Green" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutMatchState"/>
                    </Clicked>
                </Panel>
                <Panel Width="100" Height="50" Margin="0,10,0,10">
                    <Text TextColor="White" Value="BACK" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Gray" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutTypeState"/>
                    </Clicked>
                </Panel>
            </StackPanel>
        </HidingPanel>

        <HidingPanel ux:Name="createWorkoutMatchPanel">

            <FileImageSource File="Assets/profile_1.png" ux:Key="profile1" />
            <FileImageSource File="Assets/profile_2.png" ux:Key="profile2" />
            <FileImageSource File="Assets/profile_3.png" ux:Key="profile3" />
            <FileImageSource File="Assets/profile_4.png" ux:Key="profile4" />
            <FileImageSource File="Assets/profile_5.png" ux:Key="profile5" />
            <FileImageSource File="Assets/profile_6.png" ux:Key="profile6" />
            <FileImageSource File="Assets/profile_7.png" ux:Key="profile7" />

            <JavaScript>
                var Observable = require("FuseJS/Observable");
        
                var profiles = Observable(
                    { resource : {
                        CardName: "Martin Blumberg",
                        CardFill: "#68C4DB",
                        Location: "SPAC",
                        UserImage: "profile1",
                        TimeRange: "01:00PM - 02:00PM",
                        TypeString: "Running, Chest/Triceps"
                    } },
                    { resource : {
                        CardName: "Marcus Idon",
                        CardFill: "#E9BD70",
                        Location: "Blom",
                        UserImage: "profile2",
                        TimeRange: "01:00PM - 02:00PM",
                        TypeString: "Running, Legs/Shoulders"
                    } },
                    { resource : {
                        CardName: "Tom Clever",
                        CardFill: "#93ADEF",
                        Location: "SPAC",
                        UserImage: "profile3",
                        TimeRange: "01:00PM - 02:00PM",
                        TypeString: "Cycling, Legs/Shoulders"
                    } },
                    { resource : {
                        CardName: "John Evans",
                        CardFill: "#FFA3A3",
                        Location: "Patten",
                        UserImage: "profile4",
                        TimeRange: "01:15PM - 02:00PM",
                        TypeString: "Running, Back/Biceps"
                    } },
                    { resource : {
                        CardName: "Marshall Mason",
                        CardFill: "#CBABD5",
                        Location: "SPAC",
                        UserImage: "profile5",
                        TimeRange: "01:00PM - 01:45PM",
                        TypeString: "Swimming, Chest/Triceps"
                    } },
                    { resource : {
                        CardName: "Simon Gates",
                        CardFill: "#6FC4AF",
                        Location: "Blom",
                        UserImage: "profile6",
                        TimeRange: "01:30PM - 02:00PM",
                        TypeString: "Swimming, Legs/Shoulders"
                    } },
                    { resource : {
                        CardName: "Bobby Schumacher",
                        CardFill: "#919ABB",
                        Location: "Patten",
                        UserImage: "profile7",
                        TimeRange: "01:00PM - 01:30PM",
                        TypeString: "Running, Back/Biceps"
                    } }
                );

                module.exports = {
                    profiles : profiles
                }
            </JavaScript>

            <Text Alignment="TopCenter" TextAlignment="Center" Margin="60,75,60,0" TextWrapping="Wrap">Here are some workouts you might be interested in joining!</Text>

            <PageControl Transition="None" Interaction="None" InactiveState="Unchanged" Margin="0,100" ux:Name="navContext">
                <LinearNavigation Duration="0.4" Easing="CircularOut"/>
                <SwipeNavigate SwipeDirection="Left" />
                <Each Items="{profiles}">
                    <Card Name="{resource.UserImage}" CardName="{resource.CardName}" CardFill="{resource.CardFill}" TimeRange="{resource.TimeRange}" TypeString="{resource.TypeString}" Location="{resource.Location}" CachingMode="Never">
                        <ImageFill ux:Binding="UserImage" Source="{DataToResource resource.UserImage}" />
                        <Clicked>
                            <NavigateTo Target="{resource.UserImage}"/>
                        </Clicked>
                    </Card>
                </Each>
            </PageControl>
            <Grid Columns="1*,1*" Alignment="Bottom" Margin="20,0,20,20">
                <Panel Width="100" Height="50">
                    <Text TextColor="White" Value="BACK" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Gray" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="createWorkoutNumberState"/>
                    </Clicked>
                </Panel>
                <Panel Width="100" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text TextColor="White" Value="DONE" Alignment="Center" />
                    <Rectangle ux:Binding="Appearance" Color="Green" CornerRadius="25" />
                    <Clicked>
                        <Set state.Active="mainState"/>
                    </Clicked>
                </Panel>
            </Grid>
        </HidingPanel>

        <HidingPanel ux:Name="genderForm" Width="90%" Height="45%" Offset="0%,10%">
            <StackPanel>
                <Grid RowCount="2" Margin="20, 60">
                <Text TextAlignment="Center">Your Gender?</Text>
                <Grid Columns="70,1*,70">
                    <Text ux:Name="genderTextMale" TextColor="Red">Male</Text>
                    <Switch>
                        <WhileTrue>
                            <Change genderTextMale.TextColor="Black" Duration="0.5"
                                Easing="CircularInOut" />
                            <Change genderTextFemale.TextColor="Red" Duration="0.5"
                                Easing="CircularInOut" />
                        </WhileTrue>
                    </Switch>
                    <Text ux:Name="genderTextFemale" TextColor="Black">Female</Text>
                </Grid>
                </Grid>
                </StackPanel>

            <Panel>
                <Panel ux:Name="toLevel" Width="100" Offset="0%,50%" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text Value="NEXT" Alignment="Center" TextColor="White"/>
                    <Clicked>
                        <Set state.Active="levelState" />
                    </Clicked>
                </Panel>
                <Panel ux:Name="toLevelButtonCollapsed" Width="10" Offset="0%,50%" Height="10"/>
            </Panel>
        </HidingPanel>

        <HidingPanel ux:Name="levelForm" Width="90%" Height="45%" Offset="0%,10%">
            <StackPanel>
                <Grid Rows="3*, 2*, 2*, 2*" Margin="10,40,30,60">
                    <Text TextAlignment="Center" TextWrapping="Wrap">What describes your workout experience most accurately?</Text>
                    <Grid Columns="1*, 1*">
                        <Text>Beginner</Text>
                        <Switch>
                        </Switch>
                    </Grid>
                    <Grid Columns="1*, 1*">
                        <Text>Expert</Text>
                        <Switch>
                        </Switch>
                    </Grid>
                    <Grid Columns="1*, 1*">
                        <Text>Neighter, in between</Text>
                        <Switch>
                        </Switch>
                    </Grid>
                </Grid>
            </StackPanel>

            <Panel>
                <Panel ux:Name="toGoal" Width="100" Offset="0%,50%" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text Value="NEXT" Alignment="Center" TextColor="White"/>
                    <Clicked>
                        <Set state.Active="goalState" />
                    </Clicked>
                </Panel>
                <Panel ux:Name="toGoalButtonCollapsed" Width="10" Offset="0%,50%" Height="10"/>
            </Panel>
        </HidingPanel>


        <HidingPanel ux:Name="goalForm" Width="90%" Height="45%" Offset="0%,10%">
            <StackPanel>
                <Grid Rows="3*, 2*, 2*, 2*" Margin="10,40,30,60">
                    <Text TextAlignment="Center" TextWrapping="Wrap">What are your goals? (Choose as many as you want)</Text>
                    <Grid Columns="1*, 1*">
                        <Text>Get Lean</Text>
                        <Switch>
                        </Switch>
                    </Grid>
                    <Grid Columns="1*, 1*">
                        <Text>Get Fit</Text>
                        <Switch>
                        </Switch>
                    </Grid>
                    <Grid Columns="1*, 1*">
                        <Text>Build Muscles</Text>
                        <Switch>
                        </Switch>
                    </Grid>
                </Grid>
            </StackPanel>

            <Panel>
                <Panel ux:Name="toExpectation" Width="100" Offset="0%,50%" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text Value="NEXT" Alignment="Center" TextColor="White"/>
                    <Clicked>
                        <Set state.Active="mainState" />
                    </Clicked>
                </Panel>
                <Panel ux:Name="toExpectationButtonCollapsed" Width="10" Offset="0%,50%" Height="10"/>
            </Panel>
        </HidingPanel>


        <HidingPanel ux:Name="signupForm" Width="90%" Height="45%" Offset="0%,10%">
            <Grid RowCount="3" Margin="30,40,30,60">
                <TextInput ux:Name="usernameTI" PlaceholderText="Username" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#888"/>
                <TextInput ux:Name="emailTI"    PlaceholderText="Email ID" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#888"/>
                <TextInput ux:Name="passwordTI" PlaceholderText="Password" Opacity="1" Alignment="VerticalCenter" PlaceholderColor="#888"/>
            </Grid>
            <WhileEnabled>
                <Change usernameTI.Opacity="1" Duration="0.4" />
                <Change emailTI.Opacity="1"    Duration="0.4" Delay="0.15" />
                <Change passwordTI.Opacity="1" Duration="0.4" Delay="0.3" />
            </WhileEnabled>

            <Panel>
                <Panel ux:Name="submitButton" Width="100" Offset="0%,50%" Height="50" HitTestMode="LocalBoundsAndChildren">
                    <Text Value="NEXT" Alignment="Center" TextColor="White"/>
                    <Clicked>
                        <Set state.Active="genderState" />
                    </Clicked>
                </Panel>
                <Panel ux:Name="submitButtonCollapsed" Width="10" Offset="0%,50%" Height="10"/>
            </Panel>
        </HidingPanel>

        <HidingPanel ux:Name="startPanel" Alignment="Bottom" Height="30%" Padding="15,0,15,15">
            <GridLayout Rows="1*,1*"/>
            <Panel ux:Name="loginButton" Width="120" Height="50" Alignment="Top" HitTestMode="LocalBounds">
                <Text Value="LOGIN" Alignment="Center" TextColor="#5E2E91" HitTestMode="LocalBounds"/>
                <Clicked>
                    <Set state.Active="mainState" />
                </Clicked>
            </Panel>
            <Panel ux:Name="signupButton" Width="120" Height="50" Alignment="Top" HitTestMode="LocalBounds">
                <Text Value="SIGNUP" Alignment="Center" TextColor="#5E2E91" HitTestMode="LocalBounds"/>
                <Clicked>
                    <Set state.Active="signupFormState" />
                </Clicked>
            </Panel>
        </HidingPanel>

        <Panel ux:Name="addButtonPanel">
            <HidingPanel ux:Name="addButton" Width="50" Height="50" Alignment="BottomRight" Margin="40" HitTestMode="LocalBoundsAndChildren">
                <Text Value="+" FontSize="30" TextColor="White" Alignment="Center"/>
                <Clicked>
                    <Set state.Active="createWorkoutDateTimeState" />
                </Clicked>
            </HidingPanel>
            <HidingPanel ux:Name="cancelButton" Width="50" Height="50" Alignment="TopRight" Margin="0,45,5,0" HitTestMode="LocalBoundsAndChildren">
                <Text Value="x" Alignment="Center" TextColor="White"/>
                <Clicked>
                    <Set state.Active="mainState"/>
                </Clicked>
            </HidingPanel>
            <HidingPanel ux:Name="cancelButtonMatch" Width="50" Height="50" Alignment="TopRight" Margin="0,20,20,0" HitTestMode="LocalBoundsAndChildren">
                <Text Value="x" Alignment="Center" TextColor="White"/>
                <Clicked>
                    <Set state.Active="mainState"/>
                </Clicked>
            </HidingPanel>
            <Rectangle ux:Name="greenRect" Color="Green" LayoutMaster="submitButtonCollapsed" CornerRadius="25" Opacity="0">
                <DropShadow />
                <WhileTrue ux:Name="showGreenRect">
                    <Change greenRect.Opacity="1" Duration="0.2"/>
                </WhileTrue>
            </Rectangle>
        </Panel>
        
        <Rectangle ux:Name="whiteRect2" Color="White" LayoutMaster="loginButton" Layer="Background" CornerRadius="25"/>
        <Rectangle ux:Name="whiteRect" Color="White" LayoutMaster="signupButton" Layer="Background" CornerRadius="25"/>
        
        <Attractor ux:Name="whiteRectCornerRadiusAttractor" Target="whiteRect.CornerRadius" Value="25" SimulationType="SmoothSnapPoints"/>

        <HidingPanel ux:Name="logoPanel" Alignment="Top" Height="50%" IsEnabled="true" HitTestMode="None" Layer="Background">
            <StackPanel Alignment="Center">
                <Image ux:Name="logo" File="Icons/logo.png" Width="75%"/>
                <StackPanel ux:Name="logoMockText">
                    <Rectangle Color="TopGray"  Width="60%" Height="10" CornerRadius="5" Margin="0,40,0,0"/>
                    <Rectangle Color="BottomGray" Width="50%" Height="10" CornerRadius="5" Margin="0,16,0,0"/>
                </StackPanel>
            </StackPanel>
            <WhileTrue ux:Name="moveLogo">
                <Change logoMockText.Opacity="0" Duration="0.4" />
                <Move Target="logo" Y="-0.6" RelativeTo="Size" Duration="0.5" Delay="0.3" Easing="CubicInOut"/>
            </WhileTrue>

            <WhileKeyboardVisible>
                <Change logoPanel.IsEnabled="false" />
            </WhileKeyboardVisible>
        </HidingPanel>

        <ux:Include File="StateAnimation.ux" />
    </ClientPanel>

</App>
